# 构建 VitePress 站点并将其部署到 GitHub Pages 的示例工作流程
name: Deploy vue3 site to Pages

on:
  workflow_run:
    workflows: ["Automated Release"]  # 触发条件：当 release.yml 完成时触发
    types:
      - completed  # 等待 `release.yml` 完成

  # 允许你从 Actions 选项卡手动运行此工作流程
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许同时进行一次部署，跳过正在运行和最新队列之间的运行队列
# 但是，不要取消正在进行的运行，因为我们希望允许这些生产部署完成
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  check-merge-status:
    runs-on: ubuntu-latest
    outputs:
      pr_merged: ${{ env.pr_merged }}  # 将合并状态作为输出传递给后续步骤
    permissions:
      contents: write  # 确保有写权限

    steps:
      - name: Get the PR merge status
        id: check-pr
        run: |
          # 获取最近的 PR 合并信息，检查 PR 是否已合并
          PR_NUMBER=$(curl -s "https://api.github.com/repos/${{ github.repository }}/pulls?state=closed" | jq '.[0].number')
          PR_MERGED=$(curl -s "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER" | jq '.merged')
          
          # 将合并状态传递给 GitHub Actions 环境变量
          if [[ "$PR_MERGED" == "true" ]]; then
            echo "PR $PR_NUMBER has been merged"
            echo "pr_merged=true" >> $GITHUB_ENV
  
          else
            echo "PR $PR_NUMBER has not been merged"
            echo "pr_merged=false" >> $GITHUB_ENV
          fi

  # 构建工作
  build:
    runs-on: ubuntu-latest
    needs: check-merge-status
    if: ${{ needs.check-merge-status.outputs.pr_merged == 'true' }}  # 引用上一步的输出值来判断

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 如果未启用 lastUpdated，则不需要
      # - uses: pnpm/action-setup@v3 # 如果使用 pnpm，请取消注释
      # - uses: oven-sh/setup-bun@v1 # 如果使用 Bun，请取消注释
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm # 或 pnpm / yarn

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install dependencies
        run: npm ci # 或 pnpm install / yarn install / bun install

      - name: Build with Vue3
        run: | # 或 pnpm build / yarn build / bun run build
          npm run build 
          cp dist/index.html dist/404.html
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  # 部署工作
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4