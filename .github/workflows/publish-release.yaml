name: Release Workflow

on:
  workflow_run:
    workflows: ["Automated Release"]  # 触发条件：当 release.yml 完成时触发
    types:
      - completed  # 等待 `release.yml` 完成

jobs:
  check-merge-status:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # 确保有写权限

    steps:
    - name: Get the PR merge status
      id: check-pr
      run: |
        # 获取最近的 PR 合并信息，检查 PR 是否已合并
        PR_NUMBER=$(curl -s "https://api.github.com/repos/${{ github.repository }}/pulls?state=closed" | jq '.[0].number')
        PR_MERGED=$(curl -s "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER" | jq '.merged')
        
        # 将合并状态传递给 GitHub Actions 环境变量
        if [[ "$PR_MERGED" == "true" ]]; then
          echo "PR $PR_NUMBER has been merged"
          echo "pr_merged=true" >> $GITHUB_ENV  # 设置环境变量
        else
          echo "PR $PR_NUMBER has not been merged"
          echo "pr_merged=false" >> $GITHUB_ENV  # 设置环境变量
        fi

  build:
    runs-on: ubuntu-latest
    needs: check-merge-status
    if: ${{ env.pr_merged == 'true' }}  # 仅在 PR 合并后执行构建

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 如果未启用 lastUpdated，则不需要
      # - uses: pnpm/action-setup@v3 # 如果使用 pnpm，请取消注释
      # - uses: oven-sh/setup-bun@v1 # 如果使用 Bun，请取消注释

      # 确保在特定的分支（例如 main）上执行
      - name: Check out specific branch
        run: |
          git fetch origin main
          git checkout main

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm # 或 pnpm / yarn

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install dependencies
        run: npm ci # 或 pnpm install / yarn install / bun install

      - name: Build with npm
        run: | # 或 pnpm build / yarn build / bun run build
          npm run build 
          cp dist/index.html dist/404.html

       # 打包成压缩文件
      - name: Archive build files
        run: zip -r build.zip ./dist  # 将 dist 文件夹打包成 build.zip

      # 上传构建文件到 GitHub Release
      - name: Create or update GitHub Release and upload assets
        uses: softprops/action-gh-release@v2.0.9
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: build.zip  # 上传打包后的文件
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
