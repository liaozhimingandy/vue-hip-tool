name: Release Workflow

on:
  push:
    tags:
      - 'v*' # 当推送标签时触发，比如 v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # 确保有写权限

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 如果未启用 lastUpdated，则不需要
      # - uses: pnpm/action-setup@v3 # 如果使用 pnpm，请取消注释
      # - uses: oven-sh/setup-bun@v1 # 如果使用 Bun，请取消注释

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm # 或 pnpm / yarn

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install dependencies
        run: npm ci # 或 pnpm install / yarn install / bun install

      - name: Build with npm
        run: | # 或 pnpm build / yarn build / bun run build
          npm run build 
          cp dist/index.html dist/404.html

       # 打包成压缩文件
      - name: Archive build files
        run: zip -r build.zip ./dist  # 将 dist 文件夹打包成 build.zip

      # 创建新的发布
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub 提供的默认 Token
        with:
          tag_name: ${{ github.ref }}  # 使用推送的标签名
          release_name: Release ${{ github.ref }}
          draft: false  # 如果设置为 true，则创建一个草稿 Release
          prerelease: false  # 如果设置为 true，则创建预发布版本

      # 显示文件目录
      - name: Display structure of downloaded files
        run: ls

      # 上传已构建的文件
      - name: Upload build artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub 提供的默认 Token
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build.zip  # 上传的文件路径
          asset_name: build.zip  # 上传后显示的文件名称
          asset_content_type: application/zip  # 文件类型
